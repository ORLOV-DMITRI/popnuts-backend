model User {
  id          String    @id @default(uuid())
  email       String
  password    String
  costList    Cost[]
  incomeList  Income[]
  depostiList Deposit[]
}

model Cost {
  id     String   @id @default(uuid())
  sum    Int
  date   DateTime
  name   String
  User   User?    @relation(fields: [userId], references: [id])
  userId String?
}

model Income {
  id     String   @id @default(uuid())
  sum    Int
  date   DateTime
  name   String
  User   User?    @relation(fields: [userId], references: [id])
  userId String?
}

model Deposit {
  id      String        @id @default(uuid())
  name    String
  sum     Int
  User    User?         @relation(fields: [userId], references: [id])
  history Transaction[]
  userId  String?
}

model Transaction {
  id        String   @id @default(uuid())
  depositId String
  type      String // "add" для пополнения, "remove" для снятия
  sum       Int
  date      DateTime @default(now())
  Deposit   Deposit  @relation(fields: [depositId], references: [id], onDelete: Cascade)
}
